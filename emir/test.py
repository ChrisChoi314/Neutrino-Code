import numpy as  np
from sympy import *

c_g = 1  # speed of graviton
hbar = 6.582119569e-25  # GeV / Hz
c = 3e8 / 3.086e25  # m * Hz * (1Gpc / 3.086e25m) = Gpc * Hz
M_GW = 2e-7*hbar  # Hz * GeV / Hz = GeV
H_0 = M_GW/1e10  # my val, from page 13 in Emir paper
M_pl = 1.22089e19  # GeV
H_0 = 1/2997.9*.7*1000 * c*hbar  # GeV, Jacob's val
k_0 = 1e10*H_0
k_c = 1e4*H_0  # both k_c and k_0 defined in same place in Emir paper
omega_M = .3
omega_R = 8.5e-5
omega_L = .7
eta_rm = .1

eta_ml = 12.5
K = 0
M_pl /= hbar

T = 6.58e-25
L = 1.97e-16
m2Gpc = 3.1e25

MGW = 2e-7


def hz2gpc(hz): return hz*(T/L)*m2Gpc
def gpc2hz(gpc): return gpc*(1/m2Gpc)*L/T


M_pl = hz2gpc(M_pl)
M_GW = MGW  # hz2gpc(MGW) # in Gpc
H_0 = 1/2997.9*.7*1000  # Gpc^-1
H_0 = M_GW/1e10

k_arr = [1e-9,1e-8,1e-7,1e-6,1e-5,1e-4,1e-3,1e-2,1e-1]

x, y, z, t = symbols('x y z t')

'''
def sqrt(x):
    print(x)
    return np.sqrt(x + 0.j)
'''

def odd_root(x, r):
    # return np.sign(x) * np.abs(x) ** (1 / r)
    return x**(1/r)

# sols = list(solveset(y**2*x**2 + x**4*M_GW**2 - H_0**2* (omega_M * x + omega_R + x**4*omega_L),x))

for k in k_arr:
    # print(k, N(sols[0].subs({y: k}), 5))

    # sols = list(solveset((y**2*x**2 + x**4*M_GW**2 - H_0**2* (omega_M * x + omega_R + x**4*omega_L)).subs({y: k}),x))

def solve(k):
    from sympy import nroots, abs, symbols, re, im
    x, y = symbols('x y z t')
    sols = list(nroots((y**2*x**2 + x**4*M_GW**2 - H_0**2* (omega_M * x + omega_R + x**4*omega_L)).subs({y: k}), n=100, maxsteps=10000))
    for sol in sols:
        if abs(im(sol)) < 1e-20 and re(sol) >= 0:
            return float(re(sol))
    raise RuntimeError("no solution")

    # print((-y**6 - 4.896e-50*y**2 - 7.776e-81))
    # print((-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3))
    '''
    solveset(y**2*x**2 + x**4*M_GW**2 - H_0**2* (omega_M * x + omega_R + x**4*omega_L),x)
    res = [
        ((-2041241.45231932*sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)) - 2886751.34594813*sqrt(-y**2 + 0.314980262473718*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3) - 4.40908153700972e-41/sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)))) if (5.20833333333334e+25*y**4 - 8.5e-25 == 0) else (-2041241.45231932*sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3)) - 2886751.34594813*sqrt(-y**2 + 4.80000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) - 0.25*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) - 4.40908153700972e-41/sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3))))), 
        ((-2041241.45231932*sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)) + 2886751.34594813*sqrt(-y**2 + 0.314980262473718*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3) - 4.40908153700972e-41/sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)))) if (5.20833333333334e+25*y**4 - 8.5e-25 == 0) else (-2041241.45231932*sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3)) + 2886751.34594813*sqrt(-y**2 + 4.80000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) - 0.25*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) - 4.40908153700972e-41/sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3))))), 

        ((2041241.45231932*sqrt(-y**2 - 0.629960524947436*odd_root(-y**6 - 4.896e-50*y**2 - 7.776e-81, 3)) - 2886751.34594813*sqrt(-y**2 + 0.314980262473718*odd_root(-y**6 - 4.896e-50*y**2 - 7.776e-81,3) + 4.40908153700972e-41/sqrt(-y**2 - 0.629960524947436*odd_root(-y**6 - 4.896e-50*y**2 - 7.776e-81,3)))) if (5.20833333333334e+25*y**4 - 8.5e-25 == 0) else (2041241.45231932*sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81,3) + 0.499999999999999*odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81, 3)) - 2886751.34594813*sqrt(-y**2 + 4.80000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81,3) - 0.25*odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81,3) + 4.40908153700972e-41/sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81,3) + 0.499999999999999*odd_root(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81,3))))), 
        
        ((2041241.45231932*sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)) + 2886751.34594813*sqrt(-y**2 + 0.314980262473718*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3) + 4.40908153700972e-41/sqrt(-y**2 - 0.629960524947436*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**(1/3)))) if (5.20833333333334e+25*y**4 - 8.5e-25 == 0) else (2041241.45231932*sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3)) + 2886751.34594813*sqrt(-y**2 + 4.80000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) - 0.25*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 4.40908153700972e-41/sqrt(-y**2 - 9.60000000000001e-27*(8.5e-25 - 5.20833333333334e+25*y**4)/(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3) + 0.499999999999999*(1.0*y**6 + 4.896e-50*y**2 + sqrt((1.632e-50 - y**4)**3 + 1.0*(-y**6 - 4.896e-50*y**2 - 7.776e-81)**2) + 7.776e-81)**(1/3)))))
    ]
    print(k, N(res[2].subs({y: k}), 5))
    '''